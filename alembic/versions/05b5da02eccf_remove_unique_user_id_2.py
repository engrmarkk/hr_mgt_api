"""remove_unique_user_id_2

Revision ID: 05b5da02eccf
Revises: 9c85b5fe01f9
Create Date: 2025-10-23 16:46:10.806560

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '05b5da02eccf'
down_revision: Union[str, None] = '9c85b5fe01f9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('bank_details_user_id_key', 'bank_details', type_='unique')
    op.drop_constraint('compensation_user_id_key', 'compensation', type_='unique')
    op.drop_constraint('employment_details_user_id_key', 'employment_details', type_='unique')
    op.drop_constraint('health_insurance_user_id_key', 'health_insurance', type_='unique')
    op.drop_constraint('user_profile_user_id_key', 'user_profile', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('user_profile_user_id_key', 'user_profile', ['user_id'])
    op.create_unique_constraint('health_insurance_user_id_key', 'health_insurance', ['user_id'])
    op.create_unique_constraint('employment_details_user_id_key', 'employment_details', ['user_id'])
    op.create_unique_constraint('compensation_user_id_key', 'compensation', ['user_id'])
    op.create_unique_constraint('bank_details_user_id_key', 'bank_details', ['user_id'])
    # ### end Alembic commands ###
